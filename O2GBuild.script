#! /bin/bash

###########################################
# OpenARC Commandline Option: ompaccInter #
###########################################
#ompaccInter=${defaultOmpAccInter}
#Interchange OpenACC directives with OpenMP 3.0 or OpenMP 4.0 directives: 
#        =0 disable this option (default)
#        =1 generate OpenACC directives from OpenMP 3.0 directives
#        =2 generate OpenACC directives from OpenMP 4.0 directives
#        =3 generate OpenMP 3.0 directives from OpenACC directives
#        =4 generate OpenMP 4.0 directives from OpenACC directives
#        =5 generate optimized OpenMP directives from OpenMP directives

###############################
# Default options for OpenACC #
###############################
defaultACCInputFile1="propagate-toz-test_OpenACC_sync.c"
defaultACCInputFile2="propagate-toz-test_OpenACC_async.c"
#defaultOmpAccInter=0
###############################
# Default options for OpenMP4 #
###############################
defaultOMP4InputFile1="propagate-toz-test_OpenMP4_sync.c"
defaultOMP4InputFile2="propagate-toz-test_OpenMP4_async.c"
#defaultOmpAccInter=2

if [ $# -eq 2 ]; then
	inputMode="$1"
	numStreams=$2
elif [ $# -eq 1 ]; then
	inputMode="$1"
	numStreams=10
else
	inputMode="acccv3"
	numStreams=10
	inputFile="$defaultInputFile"
	ompaccInter="$defaultOmpAccInter"
fi

if [ "$inputMode" == "accc" ]; then
	inputFile="$defaultACCInputFile1"
	ompaccInter=0
elif [ "$inputMode" == "acccv3" ]; then
	inputFile="$defaultACCInputFile2"
	ompaccInter=0
elif [ "$inputMode" == "omp4" ]; then
	inputFile="$defaultOMP4InputFile1"
	ompaccInter=2
elif [ "$inputMode" == "omp4v3" ]; then
	inputFile="$defaultOMP4InputFile2"
	ompaccInter=2
fi

if [ ! -f "./src/$inputFile" ]; then
	echo "input file, ./src/$inputFile does not exits; exit"
	exit
fi

verLevel=0

if [ "$openarc" == "" ] || [ ! -d "${openarc}" ]; then
	echo "Environment variable, openarc, should be set to use this script; exit"
	exit
fi

openarcrt="${openarc}/openarcrt"
openarclib="${openarc}/lib"

#if [ ! -f "openarcConf.txt" ]; then
    cp "openarcConf_NORMAL.txt" "openarcConf.txt"
#fi

if [ "$numStreams" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__numStreams__|${numStreams}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi


if [ ! -d ./bin ]; then
	mkdir bin
fi

if [ "$openarcrt" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__openarcrt__|${openarcrt}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

java -classpath $openarclib/cetus.jar:$openarclib/antlr.jar openacc.exec.ACC2GPUDriver -verbosity=${verLevel} -ompaccInter=${ompaccInter} -gpuConfFile=openarcConf.txt ./src/$inputFile

echo ""
echo "====> To compile the translated output file:"
echo "//for OpenACC (sync version): "
echo "\$ make COMPILER=openarc MODE=accc"
echo "//for OpenACC (async version): "
echo "\$ make COMPILER=openarc MODE=acccv3"
echo "//for OpenMP4 (sync version): "
echo "\$ make COMPILER=openarc MODE=omp4"
echo ""
echo "====> To run the compiled binary:"
echo "//for OpenACC (sync version): "
echo "\$ cd bin; propagate_openarc_accc"
echo "//for OpenACC (async version): "
echo "\$ cd bin; propagate_openarc_acccv3"
echo "//for OpenMP4 (sync version): "
echo "\$ cd bin; propagate_openarc_omp4"
echo ""
